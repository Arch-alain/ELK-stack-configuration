version: '3.8'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elk_data:/usr/share/elasticsearch/data
      - ./elk-config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=changeme
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elk
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200"]
      interval: 10s
      retries: 5
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: flask_app
      MYSQL_USER: flask_user
      MYSQL_PASSWORD: flask_password
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - elk
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5


  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./elk-config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
      - kb_data:/usr/share/kibana/data
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - elk
    depends_on:
      elasticsearch:
        condition: service_healthy
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:5601/api/status"]
      interval: 10s
      retries: 5

  apm-server:
    image: docker.elastic.co/apm/apm-server:8.10.2
    container_name: apm-server
    ports:
      - "8200:8200"
    environment:
      - output.elasticsearch.hosts=["http://elasticsearch:9200"]
      - output.elasticsearch.username=elastic
      - output.elasticsearch.password=changeme
    volumes:
      - ./elk-config/apm-server/apm-server.yml:/usr/share/apm-server/apm-server.yml
    networks:
      - elk
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep apm-server | grep -v grep"]
      interval: 10s
      retries: 5

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.10.2
    container_name: filebeat
    user: root
    command: ["filebeat", "-e", "--strict.perms=false"]
    volumes:
      - ./elk-config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./flask8521-app/logs:/var/log/flask:ro
      - /var/log/system.log:/var/log/system.log:ro
    networks:
      - elk
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "filebeat test output"]
      interval: 10s
      retries: 5

  flask-app:
    build:
      context: ./flask8521-app
      dockerfile: Dockerfile
    container_name: flask-app
    ports:
      - "5000:5000"
    volumes:
      - ./flask8521-app:/app
      - ./flask8521-app/logs:/var/log/flask
    environment:
      - ELASTIC_APM_SERVER_URL=http://apm-server:8200
      - ELASTIC_APM_SERVICE_NAME=flask-app
    networks:
      - elk
    depends_on:

      apm-server:
        condition: service_healthy

networks:
  elk:
    driver: bridge

volumes:
  elk_data:
  kb_data:
  mysql_data: